<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MCU on Kontronn</title>
    <link>https://www.kontronn.com/categories/mcu/</link>
    <description>Recent content in MCU on Kontronn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 02 Oct 2023 14:54:47 +0800</lastBuildDate><atom:link href="https://www.kontronn.com/categories/mcu/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>STM32怎么选型</title>
      <link>https://www.kontronn.com/post/mcu/how-to-select-stm32.html</link>
      <pubDate>Mon, 02 Oct 2023 14:54:47 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/mcu/how-to-select-stm32.html</guid>
      <description>什么是 STM32 STM32，从字面上来理解，ST是意法半导体，M是Microelectronics的缩写，32表示32位，合起来理解，STM32就是指ST公司开发的32位微控制器。在如今的32位控制器当中，STM32可以说是最璀璨的新星，它受宠若娇，大受工程师和市场的青睐，无芯能出其右。
STM32属于一个微控制器，自带了各种常用通信接口，比如USART、I2C、SPI等，可接非常多的传感器，可以控制很多的设备。现实生活中，我们接触到的很多电器产品都有STM32的身影，比如智能手环，微型四轴飞行器，平衡车、移动POST机，智能电饭锅，3D打印机等等。下面我们以最近最为火爆的两个产品来讲解下，一个是手环，一个是飞行器。
现在无人机非常火热，高端的无人机用STM32做不来，但是小型的四轴飞行器用STM32还是绰绰有余的。
STM32 分类 STM32有很多系列，可以满足市场的各种需求，从内核上分有Cortex-M0、M3、M4和M7这几种，每个内核又大概分为主流、高性能和低功耗。具体如下表所示。
单纯从学习的角度出发，可以选择F1和F4，F1代表了基础型，基于Cortex-M3内核，主频为72MHZ，F4代表了高性能，基于Cortex-M4内核，主频180M。之于F1，F4（429系列以上）除了内核不同和主频的提升外，升级的明显特色就是带了LCD控制器和摄像头接口，支持SDRAM，这个区别在项目选型上会被优先考虑。但是从大学教学和用户初学来说，还是首选F1系列，目前在市场上资料最多，产品占有量最多的就是F1系列的STM32。
以STM32F103VET6来讲下STM32的命名方法，具体如下表所示。
更详细的命名方法说明，见下图。
选择合适的 MCU 了解了STM32的分类和命名方法之后，就可以根据项目的具体需求先大概选择哪类内核的MCU，普通应用，不需要接大屏幕的一般选择Cortex-M3内核的F1系列，如果要追求高性能，需要大量的数据运算，且需要外接RGB大屏幕的则选择Cortex-M4内核的F429系列。明确了大方向之后，接下来就是细分选型，先确定引脚，引脚多的功能就多，价格也贵，具体得根据实际项目中需要使用到什么功能，够用就好。确定好了引脚数目之后再选择FLASH大小，相同引脚数的MCU会有不同的FLASH大小可供选择，这个也是根据实际需要选择，程序大的就选择大点的FLASH，要是产品一量产，这些省下来的都是钱啊。有些月出货量以KK（百万数量级）为单位的产品，不仅是MCU，连电阻电容能少用就少用，更甚者连PCB的过孔的多少都有讲究。项目中的元器件的选型有很多学问。</description>
    </item>
    
    <item>
      <title>一个简单的MCU内存管理模块(附源码)</title>
      <link>https://www.kontronn.com/post/mcu/a-simple-mcu-memory-management-module.html</link>
      <pubDate>Sun, 24 Sep 2023 18:50:17 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/mcu/a-simple-mcu-memory-management-module.html</guid>
      <description>&lt;p&gt;现在非常多的的MCU性能都还不错，同时用户也会去扩展一些外部RAM，那么如何高效便捷的管理这些内存是一个重要话题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>STM32之GPIO点亮LED</title>
      <link>https://www.kontronn.com/post/mcu/STM32-gpio-led.html</link>
      <pubDate>Sun, 24 Sep 2023 18:40:34 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/mcu/STM32-gpio-led.html</guid>
      <description>&lt;p&gt;我们在基础部分讲了有关GPIO的方面，从这章开始我们进入模块的讲解，从最开始的LED灯到各种传感器模块进行。专栏预计25个章节。后续可能会不定时的增加。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>简单分析STM32和51的区别</title>
      <link>https://www.kontronn.com/post/mcu/difference-between-smt32-and-c51.html</link>
      <pubDate>Sat, 23 Sep 2023 23:01:22 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/mcu/difference-between-smt32-and-c51.html</guid>
      <description>&lt;p&gt;分享本文，简单分析STM32与51单片机的区别与取舍之处。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ARMv8架构u-boot启动流程详细分析</title>
      <link>https://www.kontronn.com/post/mcu/uboot-boot-process-depth-analysis-based-on-ARMv8.html</link>
      <pubDate>Sat, 29 Jul 2023 11:44:46 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/mcu/uboot-boot-process-depth-analysis-based-on-ARMv8.html</guid>
      <description>&lt;p&gt;本文基于 armv8 架构来对 u-boot 进行启动流程分析，u-boot版本为2022-01。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>STM32的完整启动流程分析</title>
      <link>https://www.kontronn.com/post/mcu/STM32-whole-boot-up-process-analysis.html</link>
      <pubDate>Fri, 23 Jun 2023 23:36:57 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/mcu/STM32-whole-boot-up-process-analysis.html</guid>
      <description>&lt;p&gt;关于STM32的启动流程，网上有的资料在讨论几种boot模式，有的在回答启动文件的内容，在查阅了很多资料后，本文给出一个比较全面的总结和回答。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>单片机基础概念：指令、数位、字节、存储器、总线</title>
      <link>https://www.kontronn.com/post/mcu/basic-concept-of-micro-processor-unit.html</link>
      <pubDate>Fri, 23 Jun 2023 08:19:59 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/mcu/basic-concept-of-micro-processor-unit.html</guid>
      <description>&lt;p&gt;本文介绍单片机基础概念：指令、数位、字节、存储器、总线&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CPU、MPU、MCU和SOC的简介</title>
      <link>https://www.kontronn.com/post/mcu/introduction-of-cpu-mpu-mcu-soc.html</link>
      <pubDate>Fri, 23 Jun 2023 08:13:55 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/mcu/introduction-of-cpu-mpu-mcu-soc.html</guid>
      <description>&lt;p&gt;在嵌入式开发中，我们会经常看到或接触一些专业术语，例如CPU、MPU、MCU和SOC等，并且这些专业术语出现的频率也是非常之高，在面试中也常常会作为提问的知识点，下面我们就来看一下他们之间的特点和区别。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
