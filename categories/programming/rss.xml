<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Kontronn</title>
    <link>https://www.kontronn.com/categories/programming/</link>
    <description>Recent content in Programming on Kontronn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 04 Aug 2024 07:10:36 +0800</lastBuildDate><atom:link href="https://www.kontronn.com/categories/programming/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>谷歌不再支持 Golang</title>
      <link>https://www.kontronn.com/post/programming/google-no-longer-supports-golang.html</link>
      <pubDate>Sun, 04 Aug 2024 07:10:36 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/google-no-longer-supports-golang.html</guid>
      <description>&lt;p&gt;Golang，又称 Go 语言，自 2009 年由 Google 发布以来，凭借其简洁的语法、高效的并发性能和强大的标准库，迅速成为云计算、网络编程、微服务等领域备受青睐的编程语言。然而，近期 Google 对其 Python 核心团队和 Flutter/Dart 团队的裁员引发了开发者社区的广泛关注，也不禁让人思考：如果有一天 Google 不再支持 Golang，Golang 的未来将会如何？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>网络编程：解密 libcurl库</title>
      <link>https://www.kontronn.com/post/programming/network-programming-decrypting-the-libcurl-library.html</link>
      <pubDate>Wed, 17 Jul 2024 21:52:28 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/network-programming-decrypting-the-libcurl-library.html</guid>
      <description>&lt;p&gt;在这个信息化的时代，网络编程已经渗透到各行各业，从网页爬虫到远程服务器的交互，网络通信无处不在。对于 C++ 开发者来说，libcurl 无疑是一个强大的工具，它提供了一个简洁而灵活的接口来处理各种网络协议。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>什么是MD5</title>
      <link>https://www.kontronn.com/post/programming/introduction-to-message-digest-algorithm-5.html</link>
      <pubDate>Wed, 17 Jul 2024 19:27:43 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/introduction-to-message-digest-algorithm-5.html</guid>
      <description>&lt;p&gt;MD5，全称为Message-Digest Algorithm 5，是一种广泛使用的加密哈希函数，可以生成一个128位（16字节）的哈希值（杂凑值），用于确保信息传输完整一致。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C/C&#43;&#43;宏中使用do-while包裹的优势</title>
      <link>https://www.kontronn.com/post/programming/advantages-of-using-do-while-wrapper-in-CC&#43;&#43;-macros.html</link>
      <pubDate>Mon, 15 Jul 2024 00:44:44 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/advantages-of-using-do-while-wrapper-in-CC&#43;&#43;-macros.html</guid>
      <description>&lt;p&gt;在 C 和 C++ 编程中，宏（macro）是一种非常强大的工具。它们允许开发者编写简洁、高效的代码，减少重复。然而，使用宏时也可能会引发一些意料之外的问题。为了防止这些问题，开发者经常使用 do-while 包裹宏。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenBMC: coredump自动发现及调试实践</title>
      <link>https://www.kontronn.com/post/programming/OpenBMC-coredump-automatic-discovery-and-debugging-practice.html</link>
      <pubDate>Wed, 26 Jun 2024 23:33:24 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/OpenBMC-coredump-automatic-discovery-and-debugging-practice.html</guid>
      <description>&lt;p&gt;BMC（Baseboard Management Controller）是一种服务器上的独立微控制器，BMC 在提供 7*24 的硬件监控和管理功能的同时，还承担着诸多关键职责，为整个系统的可靠性、管理性提供了基础支持。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43;中的临时对象</title>
      <link>https://www.kontronn.com/post/programming/temporary-object-in-c-plus-plus.html</link>
      <pubDate>Sat, 27 Apr 2024 19:31:47 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/temporary-object-in-c-plus-plus.html</guid>
      <description>&lt;p&gt;Temporary object，临时对象。一听名字就明白，这个对象的意义不大，只是临时中转一下或者存在一下，有的可能连个存在感都刷不到就消失了。但不要小看这种临时对象，对C/C++这种以效率严苛为前提的编程环境下，它就是效率低下的某种代名词。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>程序员的十大优秀编码习惯</title>
      <link>https://www.kontronn.com/post/programming/top-10-best-coding-habits-for-programmers.html</link>
      <pubDate>Mon, 01 Apr 2024 16:43:01 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/top-10-best-coding-habits-for-programmers.html</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://www.kontronn.com/imgs/post/programming-tips.png&#34; alt=&#34;Programming Tips&#34;&gt;&lt;/p&gt;
&lt;p&gt;在C++编程的世界中，良好的编码习惯是提高代码质量、可维护性和可读性的关键。作为一名C++程序员，我们应该时刻关注并遵循这些优秀的编码习惯，让我们的代码更加清晰、高效。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C语言中结构体struct的用法</title>
      <link>https://www.kontronn.com/post/programming/usage-of-struct-in-c.html</link>
      <pubDate>Wed, 22 Nov 2023 22:51:58 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/usage-of-struct-in-c.html</guid>
      <description>&lt;p&gt;本文简要介绍了c语言中结构体Struct的用法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>嵌入式开发中的C语言——编译器</title>
      <link>https://www.kontronn.com/post/programming/compiler-c-programming-in-embedded-design.html</link>
      <pubDate>Tue, 21 Nov 2023 13:48:03 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/compiler-c-programming-in-embedded-design.html</guid>
      <description>&lt;p&gt;如果你和一个优秀的程序员共事，你会发现他对他使用的工具非常熟悉，就像一个画家了解他的画具一样。&amp;mdash; 比尔.盖茨&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C语言的编译过程</title>
      <link>https://www.kontronn.com/post/programming/the-compile-process-of-c-languageg.html</link>
      <pubDate>Sat, 07 Oct 2023 18:07:14 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/the-compile-process-of-c-languageg.html</guid>
      <description>&lt;p&gt;C语言的编译链接过程要把我们编写的一个C程序源代码，转换成可以在硬件上运行的程序（可执行代码），需要进行编译和链接。过程图解如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>你了解C 和 C&#43;&#43; 标准库吗</title>
      <link>https://www.kontronn.com/post/programming/do-you-understand-c-and-c-plus-plus-standard-library.html</link>
      <pubDate>Sun, 01 Oct 2023 18:51:43 +0800</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/do-you-understand-c-and-c-plus-plus-standard-library.html</guid>
      <description>&lt;p&gt;本文简要介绍编写 C/C++ 应用程序的领域，标准库的作用以及它是如何在各种操作系统中实现的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43;中fmt库的用法</title>
      <link>https://www.kontronn.com/post/programming/fmt-lib-usage-in-c-plus-plus.html</link>
      <pubDate>Tue, 08 Aug 2023 12:50:06 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/fmt-lib-usage-in-c-plus-plus.html</guid>
      <description>&lt;p&gt;本来这篇文章应该接着介绍 memset 的，但是我暂时不想写那个主题。这次就写点新的东西。介绍一下 fmt 库。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C语言while(1) 和 for ( ; ; )的区别</title>
      <link>https://www.kontronn.com/post/programming/difference-while-1-and-for-loop.html</link>
      <pubDate>Sat, 29 Jul 2023 08:04:37 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/difference-while-1-and-for-loop.html</guid>
      <description>&lt;p&gt;while(1) 和 for(;;) 它们不都是无限循环吗，作用应该一样啊，它们到底有什么区别？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>状态机的三种实现方法</title>
      <link>https://www.kontronn.com/post/programming/three-implementation-methods-of-state-machine.html</link>
      <pubDate>Tue, 25 Jul 2023 09:57:02 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/three-implementation-methods-of-state-machine.html</guid>
      <description>&lt;p&gt;这次我们一起来学习C语言实现状态机的三种方法解析。&lt;/p&gt;
&lt;p&gt;状态机的实现无非就是 3 个要素：状态、事件、响应。转换成具体的行为就 3 句话。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>取代C&#43;&#43;？谷歌开源编程语言Carbon</title>
      <link>https://www.kontronn.com/post/programming/google-open-source-programming-language-carbon.html</link>
      <pubDate>Sun, 16 Jul 2023 02:12:27 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/google-open-source-programming-language-carbon.html</guid>
      <description>&lt;p&gt;号称替代C++，谷歌发布新的编程语言，已经过去了一年。去年7月，在多伦多举办的CppNorth大会上，谷歌宣布正式开源内部打造的编程语言Carbon，并称他是C++的继任者。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>10道经典的嵌入式C语言题目</title>
      <link>https://www.kontronn.com/post/programming/ten-classical-embedded-c-language-examination-questions.html</link>
      <pubDate>Mon, 10 Jul 2023 09:22:33 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/ten-classical-embedded-c-language-examination-questions.html</guid>
      <description>&lt;p&gt;10个C语言面试题，涉及指针、进程、运算、结构体、函数、内存，看看你能做出几个&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux内核中使用的C语言技巧</title>
      <link>https://www.kontronn.com/post/programming/c-language-tricks-used-in-the-linux-kernel.html</link>
      <pubDate>Fri, 23 Jun 2023 08:31:44 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/c-language-tricks-used-in-the-linux-kernel.html</guid>
      <description>&lt;p&gt;下面是Linux内核中常常使用到的C语言技巧，比较实用，小伙伴们学起来！注意需要GCC编译器才支持这些特性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>嵌入式C语言之结构体封装函数</title>
      <link>https://www.kontronn.com/post/programming/embedded-c-programming-language-struct-pack-function.html</link>
      <pubDate>Fri, 23 Jun 2023 03:04:41 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/embedded-c-programming-language-struct-pack-function.html</guid>
      <description>&lt;p&gt;在嵌入式系统中，结构体封装函数可以用于对于嵌入式硬件资源进行抽象和封装，从而提高软件的可维护性和可移植性。结构体封装函数通常包含数据和行为，并提供了对数据的访问和操作方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于extern C的的详细剖析</title>
      <link>https://www.kontronn.com/post/programming/extern-c-detailed-analysis.html</link>
      <pubDate>Tue, 06 Jun 2023 13:01:56 -0400</pubDate>
      
      <guid>https://www.kontronn.com/post/programming/extern-c-detailed-analysis.html</guid>
      <description>&lt;p&gt;在你工作过的系统里，不知能否看到类似下面的代码。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
